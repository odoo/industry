<?xml version='1.0' encoding='UTF-8'?>
<odoo>
  <record id="x_run_time_meter_model_x_active_field" model="ir.model.fields">
    <field name="ttype">boolean</field>
    <field name="copied" eval="True"/>
    <field name="field_description">Active</field>
    <field name="model_id" ref="x_run_time_meter_model"/>
    <field name="name">x_active</field>
    </record>
  <record id="x_run_time_meter_model_x_notes_field" model="ir.model.fields">
    <field name="ttype">html</field>
    <field name="copied" eval="True"/>
    <field name="field_description">Notes</field>
    <field name="model_id" ref="x_run_time_meter_model"/>
    <field name="name">x_notes</field>
  </record>
  <record id="x_run_time_meter_model_x_sequence_field" model="ir.model.fields">
    <field name="ttype">integer</field>
    <field name="copied" eval="True"/>
    <field name="field_description">Sequence</field>
    <field name="model_id" ref="x_run_time_meter_model"/>
    <field name="name">x_sequence</field>
  </record>
  <record id="x_run_time_meter_model_x_product_field" model="ir.model.fields">
    <field name="ttype">many2one</field>
    <field name="copied" eval="True"/>
    <field name="field_description">Product</field>
    <field name="model_id" ref="x_run_time_meter_model"/>
    <field name="name">x_product_id</field>
    <field name="relation">product.template</field>
    <field name="domain" eval="[('rent_ok', '!=', False)]"/>
    <field name="required" eval="True"/>
    <field name="on_delete">restrict</field>
  </record>
  <record id="x_run_time_meter_model_x_serial_field" model="ir.model.fields">
    <field name="ttype">many2one</field>
    <field name="copied" eval="True"/>
    <field name="field_description">Serial</field>
    <field name="model_id" ref="x_run_time_meter_model"/>
    <field name="name">x_serial_id</field>
    <field name="relation">stock.lot</field>
    <field name="required" eval="True"/>
    <field name="on_delete">restrict</field>
  </record>
  <record id="x_run_time_meter_model_x_date_field" model="ir.model.fields">
    <field name="ttype">date</field>
    <field name="copied" eval="True"/>
    <field name="field_description">Date</field>
    <field name="model_id" ref="x_run_time_meter_model"/>
    <field name="name">x_date</field>
    <field name="required" eval="True"/>
  </record>
  <record id="x_run_time_meter_model_x_run_time_field" model="ir.model.fields">
    <field name="ttype">float</field>
    <field name="copied" eval="True"/>
    <field name="field_description">Run-Time (h)</field>
    <field name="model_id" ref="x_run_time_meter_model"/>
    <field name="name">x_run_time</field>
    <field name="required" eval="True"/>
  </record>
  <record id="x_run_time_meter_model_x_name_field" model="ir.model.fields">
    <field name="ttype">char</field>
    <field name="field_description">Name</field>
    <field name="model_id" ref="x_run_time_meter_model"/>
    <field name="name">x_name</field>
    <field name="compute"><![CDATA[for record in self:
      record['x_date'] = record.x_date or datetime.datetime.today()
      serial = record.x_serial_id.name or 'unserialed'
      record['x_name'] = record.x_date.strftime('%d/%m/%y ') + serial]]></field>
    <field name="store" eval="False"/>
    <field name="readonly" eval="True"/>
  </record>
    <record id="x_run_time_meter_model_x_run_time_increment_h_field" model="ir.model.fields">
      <field name="ttype">float</field>
      <field name="field_description">Run-Time Increment (h)</field>
      <field name="model_id" ref="x_run_time_meter_model"/>
      <field name="name">x_run_time_increment_h</field>
      <field name="readonly" eval="True"/>
    </record>
    <record id="stock_model_stock_lot_x_x_serial_x_run_time_meter_count_field" model="ir.model.fields">
    <field name="compute"><![CDATA[
serial_counts = dict(self.env['x_run_time_meter']._read_group(domain=[('x_serial_id', 'in', self.ids)], groupby=['x_serial_id'], aggregates=['__count']))
for record in self: record['x_x_serial_x_run_time_meter_count'] = serial_counts.get(record, False)
]]></field>
    <field name="ttype">integer</field>
    <field name="field_description">Run-Time</field>
    <field name="model_id" ref="stock.model_stock_lot"/>
    <field name="name">x_x_serial_x_run_time_meter_count</field>
    <field name="selectable" eval="False"/>
    <field name="store" eval="False"/>
  </record>
  <record id="stock_model_stock_lot_x_run_time_meter_field" model="ir.model.fields">
    <field name="ttype">one2many</field>
    <field name="field_description">Run-Time Meters</field>
    <field name="model_id" ref="stock.model_stock_lot"/>
    <field name="name">x_run_time_meter_ids</field>
    <field name="relation">x_run_time_meter</field>
    <field name="relation_field">x_serial_id</field>
  </record>
  <record id="stock_model_stock_lot_x_run_time_meter_h_field" model="ir.model.fields">
    <field name="compute"><![CDATA[
for record in self: record['x_run_time_meter_h'] = max(record.x_run_time_meter_ids.mapped('x_run_time'), default=0.0)
]]></field>
    <field name="ttype">float</field>
    <field name="depends">x_run_time_meter_ids.x_run_time</field>
    <field name="field_description">Run-Time Meter (h)</field>
    <field name="model_id" ref="stock.model_stock_lot"/>
    <field name="name">x_run_time_meter_h</field>
    <field name="readonly" eval="True"/>
    <field name="selectable" eval="False"/>
    <field name="store" eval="False"/>
  </record>
  <record id="project_model_project_task_x_maintenance_field" model="ir.model.fields">
    <field name="ttype">selection</field>
    <field name="copied" eval="True"/>
    <field name="field_description">Maintenance</field>
    <field name="model_id" ref="project.model_project_task"/>
    <field name="name">x_maintenance</field>
    <field name="help">Captures the origin of the task:
      - Recurrent from recurring maintenance rules
      - Corrective from failed quality checks</field>
  </record>
  <record id="project_model_project_task_x_maintenance_selection_recurrent" model="ir.model.fields.selection">
    <field name="name">Recurrent</field>
    <field name="field_id" ref="project_model_project_task_x_maintenance_field" />
    <field name="value">recurrent</field>
  </record>
  <record id="project_model_project_task_x_maintenance_selection_corrective" model="ir.model.fields.selection">
    <field name="name">Corrective</field>
    <field name="field_id" ref="project_model_project_task_x_maintenance_field" />
    <field name="value">corrective</field>
  </record>
  <record id="project_model_project_task_x_recurring_maintenance_rule_field" model="ir.model.fields">
    <field name="ttype">many2one</field>
    <field name="copied" eval="True"/>
    <field name="field_description">Recurring Maintenance Rule</field>
    <field name="model_id" ref="project.model_project_task"/>
    <field name="name">x_recurring_maintenance_rule_id</field>
    <field name="relation">x_recurring_maintenance_rules</field>
  </record>
  <record id="project_model_project_task_x_run_time_meter_when_done_field" model="ir.model.fields">
    <field name="ttype">integer</field>
    <field name="copied" eval="True"/>
    <field name="field_description">Run-Time Increment (h) when done</field>
    <field name="model_id" ref="project.model_project_task"/>
    <field name="name">x_run_time_meter_when_done</field>
  </record>
  <record id="x_recurring_maintenance_rules_model_x_active_field" model="ir.model.fields">
    <field name="ttype">boolean</field>
    <field name="copied" eval="True"/>
    <field name="field_description">Active</field>
    <field name="model_id" ref="x_recurring_maintenance_rules_model"/>
    <field name="name">x_active</field>
    <field name="tracking">1</field>
  </record>
  <record id="x_recurring_maintenance_rules_model_x_sequence_field" model="ir.model.fields">
    <field name="ttype">integer</field>
    <field name="copied" eval="True"/>
    <field name="field_description">Sequence</field>
    <field name="model_id" ref="x_recurring_maintenance_rules_model"/>
    <field name="name">x_sequence</field>
  </record>
  <record id="x_recurring_maintenance_rules_model_x_product_field" model="ir.model.fields">
    <field name="ttype">many2one</field>
    <field name="copied" eval="True"/>
    <field name="domain">[("rent_ok", "!=", False)]</field>
    <field name="field_description">Product</field>
    <field name="model_id" ref="x_recurring_maintenance_rules_model"/>
    <field name="name">x_product_id</field>
    <field name="relation">product.template</field>
  </record>
  <record id="x_recurring_maintenance_rules_model_x_run_time_increment_h_field" model="ir.model.fields">
    <field name="ttype">float</field>
    <field name="copied" eval="True"/>
    <field name="field_description">Run-Time Increment (h)</field>
    <field name="help">Run-time increment between two maintenance tasks</field>
    <field name="model_id" ref="x_recurring_maintenance_rules_model"/>
    <field name="name">x_run_time_increment_h</field>
    </record>
  <record id="project_model_project_task_x_serial_field" model="ir.model.fields">
    <field name="ttype">many2one</field>
    <field name="copied" eval="True"/>
    <field name="field_description">Serial</field>
    <field name="model_id" ref="project.model_project_task"/>
    <field name="name">x_serial_id</field>
    <field name="relation">stock.lot</field>
  </record>
  <record id="project_model_project_task_x_product_field" model="ir.model.fields">
    <field name="ttype">many2one</field>
    <field name="related">x_serial_id.product_id</field>
    <field name="field_description">Product</field>
    <field name="model_id" ref="project.model_project_task"/>
    <field name="name">x_product_id</field>
    <field name="readonly" eval="True"/>
    <field name="relation">product.product</field>
    <field name="store" eval="False"/>
  </record>
  <record id="stock_model_stock_lot_x_x_serial_project_task_count_field" model="ir.model.fields">
    <field name="compute"><![CDATA[
for record in self: record['x_x_serial_project_task_count'] = self.env['project.task'].search_count([('x_serial_id', '=', record.id),('x_maintenance','!=',False)])
]]></field>
    <field name="ttype">integer</field>
    <field name="field_description">Serial count</field>
    <field name="model_id" ref="stock.model_stock_lot"/>
    <field name="name">x_x_serial_project_task_count</field>
    <field name="readonly" eval="True"/>
    <field name="selectable" eval="False"/>
    <field name="store" eval="False"/>
  </record>
  <record id="stock_model_stock_storage_category_x_serial_status_field" model="ir.model.fields">
    <field name="ttype">selection</field>
    <field name="copied" eval="True"/>
    <field name="field_description">Serial Status</field>
    <field name="model_id" ref="stock.model_stock_storage_category"/>
    <field name="name">x_serial_status</field>
  </record>
  <record id="stock_model_stock_storage_category_x_serial_status_selection_available" model="ir.model.fields.selection">
    <field name="name">Available</field>
    <field name="field_id" ref="stock_model_stock_storage_category_x_serial_status_field" />
    <field name="value">available</field>
  </record>
  <record id="stock_model_stock_storage_category_x_serial_status_selection_out" model="ir.model.fields.selection">
    <field name="name">Out</field>
    <field name="field_id" ref="stock_model_stock_storage_category_x_serial_status_field" />
    <field name="value">out</field>
  </record>
  <record id="stock_model_stock_storage_category_x_serial_status_selection_reception" model="ir.model.fields.selection">
    <field name="name">Reception</field>
    <field name="field_id" ref="stock_model_stock_storage_category_x_serial_status_field" />
    <field name="value">reception</field>
  </record>
  <record id="stock_model_stock_storage_category_x_serial_status_selection_maintenance" model="ir.model.fields.selection">
    <field name="name">Maintenance</field>
    <field name="field_id" ref="stock_model_stock_storage_category_x_serial_status_field" />
    <field name="value">maintenance</field>
  </record>
  <record id="stock_model_stock_lot_x_status_field" model="ir.model.fields">
    <field name="compute"><![CDATA[
for record in self: record['x_status'] = record.location_id.storage_category_id.x_serial_status or "out"
    ]]></field>
    <field name="ttype">char</field>
    <field name="depends">location_id</field>
    <field name="field_description">Status</field>
    <field name="model_id" ref="stock.model_stock_lot"/>
    <field name="name">x_status</field>
    <field name="readonly" eval="True"/>
    <field name="selectable" eval="False"/>
    <field name="store" eval="False"/>
  </record>
  <record id="to_invoice_total_uninvoiced_balance" model="ir.model.fields">
    <field name="compute"><![CDATA[
for record in self:
    record['x_amount_to_invoice'] = 0
    for so in record.sale_order_ids:
        record['x_amount_to_invoice'] += so.amount_to_invoice
        if so.invoice_status == 'to invoice' and so.is_rental_order:
            rental_amount = sum(so.order_line.filtered('is_product_rentable').mapped('amount_to_invoice'))
            last_date = so.x_last_invoice or so.rental_start_date.date()
            next_date = min(so.rental_return_date, datetime.datetime.today()).date()
            record['x_amount_to_invoice'] += rental_amount * ((next_date - last_date).days / so.duration_days - 1)
]]></field>
    <field name="ttype">monetary</field>
    <field name="field_description">Total Uninvoiced</field>
    <field name="model_id" ref="base.model_res_partner"/>
    <field name="name">x_amount_to_invoice</field>
    <field name="currency_field">currency_id</field>
    <field name="readonly" eval="True"/>
    <field name="selectable" eval="False"/>
    <field name="store" eval="False"/>
  </record>
  <record id="sale_model_sale_order_x_last_invoice_field" model="ir.model.fields">
    <field name="ttype">date</field>
    <field name="field_description">Last invoice</field>
    <field name="model_id" ref="sale.model_sale_order"/>
    <field name="name">x_last_invoice</field>
    <field name="readonly" eval="True"/>
  </record>
  <record id="field_stock_lot_product_template_id" model="ir.model.fields">
    <field name="ttype">many2one</field>
    <field name="field_description">Serial Product Template</field>
    <field name="model_id" ref="stock.model_stock_lot"/>
    <field name="name">x_product_tmpl_id</field>
    <field name="relation">product.template</field>
    <field name="related">product_id.product_tmpl_id</field>
    <field name="readonly" eval="True"/>
    <field name="store" eval="False"/>
  </record>
  <record id="field_product_template_serial_ids" model="ir.model.fields">
    <field name="ttype">one2many</field>
    <field name="field_description">Product Serials</field>
    <field name="model_id" ref="product.model_product_template"/>
    <field name="name">x_serial_ids</field>
    <field name="relation">stock.lot</field>
    <field name="relation_field">x_product_tmpl_id</field>
  </record>
  <record id="product_model_product_template_x_recurring_maintenance_rule__count_field" model="ir.model.fields">
    <field name="compute"><![CDATA[
for record in self: record['x_recurring_maintenance_rules_count'] = self.env['x_recurring_maintenance_rules'].search_count([('x_product_id', '=', record.id)])
]]></field>
    <field name="ttype">integer</field>
    <field name="field_description">Recurring Maintenance Rules count</field>
    <field name="model_id" ref="product.model_product_template"/>
    <field name="name">x_recurring_maintenance_rules_count</field>
    <field name="readonly" eval="True"/>
    <field name="selectable" eval="False"/>
    <field name="store" eval="False"/>
  </record>
</odoo>
