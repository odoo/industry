<?xml version='1.0' encoding='UTF-8'?>
<odoo noupdate="1">
    <record id="sale_order_11" model="sale.order">
        <field name="x_maintained_serials_ids" eval="[(6, 0, [ref('stock_lot_14')])]"/>
    </record>
    <record id="sale_order_8" model="sale.order">
        <field name="x_maintained_serials_ids" eval="[(6, 0, [ref('stock_lot_1')])]"/>
    </record>
    <record id="sale_order_6" model="sale.order">
        <field name="x_maintained_serials_ids" eval="[(6, 0, [ref('stock_lot_2')])]"/>
    </record>
    <record id="sale_order_5" model="sale.order">
        <field name="x_maintained_serials_ids" eval="[(6, 0, [ref('stock_lot_14')])]"/>
    </record>
    <function model="project.task" name="write">
        <value model="project.task" search="[('sale_order_id', '=', ref('sale_order_1')), ('name', 'ilike', 'S00001 - Installation')]"/>
        <value eval="{'planned_date_begin': datetime.today().date() + relativedelta(days=-4, hours=6), 'date_deadline': datetime.today().date() + relativedelta(days=-4, hours=15), 'stage_id': ref('industry_fsm.planning_project_stage_3'), 'state': '1_done', 'user_ids': [ref('res_users_2')], 'fsm_done': True}"/>
    </function>
    <function model="project.task" name="write">
        <value model="project.task" search="[('sale_order_id', '=', ref('sale_order_2')), ('name', 'ilike', 'S00002 - Installation')]"/>
        <value eval="{'planned_date_begin': datetime.today().date() + relativedelta(days=-5, hours=6), 'date_deadline': datetime.today().date() + relativedelta(days=-5, hours=15), 'stage_id': ref('industry_fsm.planning_project_stage_3'), 'state': '1_done', 'user_ids': [ref('res_users_1')], 'fsm_done': True}"/>
    </function>
    <function model="project.task" name="write">
        <value model="project.task" search="[('sale_order_id', '=', ref('sale_order_3')), ('name', 'ilike', 'S00003 - Installation')]"/>
        <value eval="{'planned_date_begin': datetime.today().date() + relativedelta(hours=6), 'date_deadline': datetime.today().date() + relativedelta(hours=15), 'stage_id': ref('industry_fsm.planning_project_stage_3'), 'state': '1_done', 'user_ids': [ref('res_users_2')], 'fsm_done': True}"/>
    </function>
    <function model="project.task" name="write">
        <value model="project.task" search="[('sale_order_id', '=', ref('sale_order_4')), ('name', 'ilike', 'S00004 - Installation')]"/>
        <value eval="{'planned_date_begin': datetime.today().date() + relativedelta(hours=6), 'date_deadline': datetime.today().date() + relativedelta(hours=15), 'user_ids': [ref('res_users_2')]}"/>
    </function>
    <function model="project.task" name="write">
        <value model="project.task" search="[('sale_order_id', '=', ref('sale_order_5')), ('name', 'ilike', 'S00005 - Maintenance')]"/>
        <value eval="{'planned_date_begin': datetime.today().date() + relativedelta(days=-7, hours=6), 'date_deadline': datetime.today().date() + relativedelta(days=-7, hours=15), 'stage_id': ref('industry_fsm.planning_project_stage_3'), 'state': '1_done', 'user_ids': [ref('res_users_2')], 'fsm_done': True}"/>
    </function>
    <function model="project.task" name="write">
        <value model="project.task" search="[('id', '=', ref('project_task_8'))]"/>
        <value eval="{'planned_date_begin': datetime.today().date() + relativedelta(days=-7, hours=6), 'date_deadline': datetime.today().date() + relativedelta(days=-7, hours=15), 'user_ids': [ref('res_users_2')]}"/>
    </function>
    <function model="project.task" name="write">
        <value model="project.task" search="[('sale_order_id', '=', ref('sale_order_6')), ('name', 'ilike', 'S00006 - Repair')]"/>
        <value eval="{'planned_date_begin': datetime.today().date() + relativedelta(days=-8, hours=6), 'date_deadline': datetime.today().date() + relativedelta(days=-8, hours=15), 'stage_id': ref('industry_fsm.planning_project_stage_3'), 'state': '1_done', 'user_ids': [ref('res_users_2')], 'fsm_done': True}"/>
    </function>
    <function model="project.task" name="write">
        <value model="project.task" search="[('sale_order_id', '=', ref('sale_order_7')), ('name', 'ilike', 'S00007 - Installation')]"/>
        <value eval="{'planned_date_begin': datetime.today().date() + relativedelta(days=-9, hours=6), 'date_deadline': datetime.today().date() + relativedelta(days=-9, hours=15), 'stage_id': ref('industry_fsm.planning_project_stage_3'), 'state': '1_done', 'user_ids': [ref('res_users_2')], 'fsm_done': True}"/>
    </function>
    <function model="project.task" name="write">
        <value model="project.task" search="[('sale_order_id', '=', ref('sale_order_8')), ('name', 'ilike', 'S00008 - Maintenance')]"/>
        <value eval="{'planned_date_begin': datetime.today().date() + relativedelta(months=-8, days=-8, hours=6), 'date_deadline': datetime.today().date() + relativedelta(months=-8, days=-8, hours=15), 'stage_id': ref('industry_fsm.planning_project_stage_3'), 'state': '1_done', 'user_ids': [ref('res_users_2')], 'fsm_done': True}"/>
    </function>
    <function model="project.task" name="write">
        <value model="project.task" search="[('id', '=', ref('project_task_12'))]"/>
        <value eval="{'planned_date_begin': datetime.today().date() + relativedelta(days=-2, hours=6), 'date_deadline': datetime.today().date() + relativedelta(days=-2, hours=15), 'user_ids': [ref('res_users_2')]}"/>
    </function>
    <function model="project.task" name="write">
        <value model="project.task" search="[('sale_order_id', '=', ref('sale_order_9')), ('name', 'ilike', 'S00009 - Installation')]"/>
        <value eval="{'planned_date_begin': datetime.today().date() + relativedelta(days=-2, hours=6), 'date_deadline': datetime.today().date() + relativedelta(days=-2, hours=15), 'user_ids': [ref('res_users_1')]}"/>
    </function>
    <function model="project.task" name="write">
        <value model="project.task" search="[('sale_order_id', '=', ref('sale_order_10')), ('name', 'ilike', 'S00010 - Installation')]"/>
        <value eval="{'planned_date_begin': datetime.today().date() + relativedelta(days=1, hours=6), 'date_deadline': datetime.today().date() + relativedelta(days=1, hours=15), 'user_ids': [ref('res_users_1')]}"/>
    </function>
    <function model="project.task" name="write">
        <value model="project.task" search="[('sale_order_id', '=', ref('sale_order_11')), ('name', 'ilike', 'S00011 - Repair')]"/>
        <value eval="{'planned_date_begin': datetime.today().date() + relativedelta(days=5, hours=6), 'date_deadline': datetime.today().date() + relativedelta(days=5, hours=15), 'user_ids': [ref('res_users_1')]}"/>
    </function>
    <function name="button_validate" model="stock.picking" context="{'skip_sms': True}">
        <value model="stock.picking" eval="(
            obj().env.ref('hvac_services.sale_order_1') +
            obj().env.ref('hvac_services.sale_order_2') +
            obj().env.ref('hvac_services.sale_order_3') +
            obj().env.ref('hvac_services.sale_order_4') +
            obj().env.ref('hvac_services.sale_order_5') +
            obj().env.ref('hvac_services.sale_order_7') +
            obj().env.ref('hvac_services.sale_order_8') +
            obj().env.ref('hvac_services.sale_order_9')
        ).picking_ids.ids"/>
    </function>
</odoo>
