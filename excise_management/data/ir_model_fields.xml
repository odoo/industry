<?xml version='1.0' encoding='UTF-8'?>
<odoo>
    <record id="name_excise_category" model="ir.model.fields">
        <field name="ttype">char</field>
        <field name="copied" eval="True"/>
        <field name="field_description">Name</field>
        <field name="model_id" ref="excise_category"/>
        <field name="name">x_name</field>
        <field name="required" eval="True"/>
        <field name="translate" eval="True"/>
    </record>
    <record id="active_excise_category" model="ir.model.fields">
        <field name="ttype">boolean</field>
        <field name="copied" eval="True"/>
        <field name="field_description">Active</field>
        <field name="model_id" ref="excise_category"/>
        <field name="name">x_active</field>
    </record>
    <record id="sequence_excise_category" model="ir.model.fields">
        <field name="ttype">integer</field>
        <field name="copied" eval="True"/>
        <field name="field_description">Sequence</field>
        <field name="model_id" ref="excise_category"/>
        <field name="name">x_sequence</field>
    </record>
    <record id="description_excise_category" model="ir.model.fields">
        <field name="ttype">text</field>
        <field name="copied" eval="True"/>
        <field name="field_description">Description</field>
        <field name="model_id" ref="excise_category"/>
        <field name="name">x_description</field>
    </record>
    <record id="sales_tax_excise_category" model="ir.model.fields">
        <field name="ttype">many2one</field>
        <field name="field_description">Excise Sales Tax</field>
        <field name="model_id" ref="excise_category"/>
        <field name="name">x_sales_tax_id</field>
        <field name="relation">account.tax</field>
        <field name="on_delete">cascade</field>
    </record>
    <record id="purchase_tax_excise_category" model="ir.model.fields">
        <field name="ttype">many2one</field>
        <field name="field_description">Excise Purchase Tax</field>
        <field name="model_id" ref="excise_category"/>
        <field name="name">x_purchase_tax_id</field>
        <field name="relation">account.tax</field>
        <field name="on_delete">cascade</field>
    </record>
    <record id="product_template_excise_category" model="ir.model.fields">
        <field name="ttype">many2one</field>
        <field name="copied" eval="True"/>
        <field name="field_description">Excise category</field>
        <field name="model_id" ref="product.model_product_template"/>
        <field name="name">x_excise_category</field>
        <field name="relation">x_excise_category</field>
    </record>
    <record id="product_template_currency_symbol" model="ir.model.fields">
        <field name="ttype">char</field>
        <field name="field_description">Currency symbol</field>
        <field name="model_id" ref="product.model_product_template"/>
        <field name="name">x_currency_symbol</field>
        <field name="readonly" eval="True"/>
        <field name="store" eval="False"/>
        <field name="depends">company_id</field>
        <field name="compute"><![CDATA[main_company = self.env['res.company']._get_main_company()
for template in self:
    template['x_currency_symbol'] = template.company_id.sudo().currency_id.symbol or main_company.currency_id.symbol
]]></field>
    </record>
    <record id="product_template_excise_amount" model="ir.model.fields">
        <field name="ttype">float</field>
        <field name="copied" eval="True"/>
        <field name="field_description">Excise amount</field>
        <field name="model_id" ref="product.model_product_template"/>
        <field name="name">x_excise_amount</field>
    </record>
    <record id="product_template_excise_volume" model="ir.model.fields">
        <field name="compute"><![CDATA[excise_uom = self.env["uom.uom"].search([('x_excise_reporting_unit', '=', True)], limit=1)
convert = self.env.ref('excise_management.convert_to_base_unit_server_action').with_context(active_model='uom.uom')
for record in self:
    record["x_excise_volume"] = convert.with_context(active_id=record.uom_id.id).run() / convert.with_context(active_id=excise_uom.id).run() if (record.x_excise_category and excise_uom) else 0
]]></field>
        <field name="ttype">float</field>
        <field name="depends">x_excise_category, uom_id</field>
        <field name="field_description">Excise volume</field>
        <field name="model_id" ref="product.model_product_template"/>
        <field name="name">x_excise_volume</field>
        <field name="readonly" eval="True"/>
        <field name="selectable" eval="False"/>
        <field name="store" eval="False"/>
    </record>
    <record id="product_template_excise_description" model="ir.model.fields">
        <field name="ttype">text</field>
        <field name="related">x_excise_category.x_description</field>
        <field name="field_description">Excise description</field>
        <field name="model_id" ref="product.model_product_template"/>
        <field name="name">x_excise_description</field>
        <field name="readonly" eval="True"/>
        <field name="store" eval="False"/>
    </record>
    <record id="uom_uom_excise_reporting_unit" model="ir.model.fields">
        <field name="ttype">boolean</field>
        <field name="field_description">Excise reporting unit</field>
        <field name="model_id" ref="uom.model_uom_uom"/>
        <field name="name">x_excise_reporting_unit</field>
    </record>
    <record id="stock_warehouse_is_fiscal_deposit" model="ir.model.fields">
        <field name="ttype">boolean</field>
        <field name="copied" eval="True"/>
        <field name="field_description">Is Fiscal Deposit</field>
        <field name="model_id" ref="stock.model_stock_warehouse"/>
        <field name="name">x_is_fiscal_deposit</field>
    </record>
    <record id="fiscal_position_is_fiscal_deposit" model="ir.model.fields">
        <field name="ttype">boolean</field>
        <field name="copied" eval="True"/>
        <field name="field_description">Is Fiscal Deposit</field>
        <field name="model_id" ref="account.model_account_fiscal_position"/>
        <field name="name">x_is_fiscal_deposit</field>
    </record>
    <record id="account_tax_group_is_excise" model="ir.model.fields">
        <field name="ttype">boolean</field>
        <field name="field_description">Is Excise</field>
        <field name="model_id" ref="account.model_account_tax_group"/>
        <field name="name">x_is_excise</field>
    </record>
    <record id="account_tax_is_excise" model="ir.model.fields">
        <field name="ttype">boolean</field>
        <field name="field_description">Is Excise</field>
        <field name="model_id" ref="account.model_account_tax"/>
        <field name="name">x_is_excise</field>
        <field name="related">tax_group_id.x_is_excise</field>
        <field name="readonly" eval="True"/>
    </record>
    <record id="stock_move_fiscal_deposit_move" model="ir.model.fields">
      <field name="compute"><![CDATA[for record in self:
    if record.location_id.warehouse_id.x_is_fiscal_deposit:
        if record.location_dest_id.warehouse_id.x_is_fiscal_deposit:
            record['x_fiscal_deposit_move'] = "transfer"
        elif not (fp := record.picking_id.partner_id.property_account_position_id) or fp.x_is_fiscal_deposit:
            record['x_fiscal_deposit_move'] = "exit fd"
        else:
            record['x_fiscal_deposit_move'] = "exit"
    elif record.location_dest_id.warehouse_id.x_is_fiscal_deposit:
        if not (fp := record.picking_id.partner_id.property_account_position_id) or fp.x_is_fiscal_deposit:
            record['x_fiscal_deposit_move'] = "entry fd"
        else:
            record['x_fiscal_deposit_move'] = "entry"
    else:
        record['x_fiscal_deposit_move'] = "none"
        ]]></field>
      <field name="ttype">selection</field>
      <field name="selection">[('none', "None"), ('entry', "Entry"), ('entry fd', "Entry from FD"), ('exit', "Exit"), ('exit fd', "Exit to FD"), ('transfer', "Transfer")]</field>
      <field name="depends">location_id,location_dest_id</field>
      <field name="field_description">Fiscal deposit move</field>
      <field name="model_id" ref="stock.model_stock_move"/>
      <field name="name">x_fiscal_deposit_move</field>
      <field name="readonly" eval="True"/>
    </record>
    <record id="stock_move_currency" model="ir.model.fields">
        <field name="ttype">many2one</field>
        <field name="field_description">Currency</field>
        <field name="model_id" ref="stock.model_stock_move"/>
        <field name="name">x_currency_id</field>
        <field name="related">product_id.currency_id</field>
        <field name="relation">res.currency</field>
        <field name="readonly" eval="True"/>
    </record>
    <record id="stock_move_excise_amount" model="ir.model.fields">
      <field name="compute"><![CDATA[for record in self:
    amount = record.quantity * record.x_currency_id._convert(record.product_id.x_excise_amount, record.product_id.currency_id)
    if record.x_fiscal_deposit_move == "exit":
        record['x_excise_amount'] = -amount
    elif record.x_fiscal_deposit_move == "entry":
        record['x_excise_amount'] = amount
    else:
        record['x_excise_amount'] = 0
    ]]></field>
      <field name="ttype">monetary</field>
      <field name="depends">quantity, product_id</field>
      <field name="field_description">Excise amount</field>
      <field name="model_id" ref="stock.model_stock_move"/>
      <field name="name">x_excise_amount</field>
      <field name="currency_field">x_currency_id</field>
      <field name="readonly" eval="True"/>
    </record>
    <record id="stock_move_excise_category" model="ir.model.fields">
      <field name="ttype">many2one</field>
      <field name="related">product_id.product_tmpl_id.x_excise_category</field>
      <field name="field_description">Excise category</field>
      <field name="model_id" ref="stock.model_stock_move"/>
      <field name="name">x_excise_category</field>
      <field name="readonly" eval="True"/>
      <field name="relation">x_excise_category</field>
    </record>
    <record id="stock_move_excise_volume" model="ir.model.fields">
      <field name="compute"><![CDATA[for record in self:
    if 'exit' in record.x_fiscal_deposit_move:
        record['x_excise_volume'] = -1 * record.quantity * record.product_id.x_excise_volume
    elif 'entry' in record.x_fiscal_deposit_move:
        record['x_excise_volume'] = +1 * record.quantity * record.product_id.x_excise_volume
    else:
        record['x_excise_volume'] = 0
]]></field>
      <field name="ttype">float</field>
      <field name="depends">quantity, product_id, x_fiscal_deposit_move</field>
      <field name="field_description">Excise volume</field>
      <field name="model_id" ref="stock.model_stock_move"/>
      <field name="name">x_excise_volume</field>
      <field name="readonly" eval="True"/>
    </record>
    <record id="stock_move_excise_amount_unit" model="ir.model.fields">
        <field name="compute"><![CDATA[excise_uom = self.env["uom.uom"].search([('x_excise_reporting_unit', '=', True)], limit=1)
for record in self: record['x_excise_unit'] = excise_uom.id
]]></field>
        <field name="ttype">many2one</field>
        <field name="field_description">Excise Unit</field>
        <field name="model_id" ref="stock.model_stock_move"/>
        <field name="depends">x_excise_volume</field>
        <field name="name">x_excise_unit</field>
        <field name="relation">uom.uom</field>
        <field name="readonly" eval="True"/>
    </record>
</odoo>
